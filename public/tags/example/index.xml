<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Example on Theoretically Josh</title>
    <link>http://localhost:1313/tags/example/</link>
    <description>Recent content in Example on Theoretically Josh</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Feb 2023 13:05:11 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/example/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Beginning Programming Lesson 08</title>
      <link>http://localhost:1313/post/beginning-programming-lesson-08/</link>
      <pubDate>Tue, 07 Feb 2023 13:05:11 -0700</pubDate>
      <guid>http://localhost:1313/post/beginning-programming-lesson-08/</guid>
      <description>&lt;p&gt;Now that we have the basics down, let apply them to something more real, and perhaps the previous concepts covered will become more clear. When I learn a new programming language I generally start with trying to create a program to solve the Tricky Triangle. If you have ever been to Cracker Barrel, you know what it is. It goes by some other names too, but it is usually a triangular piece of wood with holes in it with enough golf tees to fill all but one whole. You play a checkers like jump rules where you remove the peg you jumped over You keep going until you have no available moves left. The goal is to only have one peg left. The code for the lesson is &lt;a href=&#34;https://github.com/jlhags/Beginning_Programming_In_Go/tree/main/Lesson_08&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
